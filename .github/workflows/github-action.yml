# This is a basic workflow to help you get started with Actions

name: DongTai-WebAPI-Build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: notify
        uses: distributhor/workflow-webhook@v1
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ""
          webhook_type: "json"
          silent: true
          data: '{"msg_type": "interactive","card": {"config": {"wide_screen_mode": true,"enable_forward": true},"elements": [{"tag": "div","text": {"content": "**西湖**，位于浙江省杭州市西湖区龙井路1号，杭州市区西部，景区总面积49平方千米，汇水面积为21.22平方千米，湖面面积为6.38平方千米。","tag": "lark_md"}}, {"actions": [{"tag": "button","text": {"content": "更多景点介绍 :玫瑰:","tag": "lark_md"},"url": "https://www.example.com","type": "default","value": {}}],"tag": "action"}],"header": {"title": {"content": "今日旅游推荐","tag": "plain_text"}}}}'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set up Python 3.7
        uses: actions/checkout@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Django Testing project
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          python3 manage.py test